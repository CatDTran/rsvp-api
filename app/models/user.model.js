/*
*NOTE: This file defines the user schema model. Use this file to add any middlewares, querries, validations ... related to this schema.
*/
var mongoose = require('mongoose'),
    Schema = mongoose.Schema;

// require onther schemas so that we can reference them
var reservationSchema = require('./reservation.model.js');
var rsvpBookSchema = require('./rsvpbook.model.js')

//--------------Schema definition---------------//
var UserSchema = new Schema({
  name: {
    first: { type: String, required: true},
    last: { type: String, required: true}
  },
  phone: Number,
  email: {
    type: String,
    lowercase: true,
    required: true
  },
  hashedPassword: String, // if user uses social login, password not required
  adminOf: [ Schema.Types.ObjectId ], // contains ObjectId of rsvp book if available
  bookBelong: [Schema.Types.ObjectId], // a list of rsvp book that this user belongs to
  reservations: [{ reservationId: Schema.Types.ObjectId }]
}, { timeStamp: {createdAt: 'createdAt', updatedAt: 'updatedAt'} }); // timeStamp will be generated by mongoose


//--------------Define middlewares for 'pre' and 'post' hooks here---------------//


// Virtuals to get fullName
UserSchema.virtual('fullName').get(function(){
  return this.first + ' ' + this.last;
});


module.exports = {UserSchema};
